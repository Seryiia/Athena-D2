// <auto-generated />
using System;
using AthenaBot.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AthenaBot.Migrations
{
    [DbContext(typeof(MysqlContext))]
    partial class MysqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AthenaBot.Db.Models.AthenaImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext")
                        .HasColumnName("extension");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_athenaimages");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_athenaimages_guildid");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_athenaimages_name");

                    b.ToTable("athenaimages", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Db.Models.Birthday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("channelid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<ushort>("Day")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("day");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<ushort>("Month")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("month");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("userid");

                    b.HasKey("Id")
                        .HasName("pk_birthdays");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_birthdays_guildid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_birthdays_userid");

                    b.ToTable("birthdays", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Db.Models.DiscordUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AvatarId")
                        .HasColumnType("longtext")
                        .HasColumnName("avatarid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<string>("Discriminator")
                        .HasColumnType("longtext")
                        .HasColumnName("discriminator");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("userid");

                    b.Property<string>("Username")
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_discorduser");

                    b.HasAlternateKey("UserId")
                        .HasName("ak_discorduser_userid");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_discorduser_userid");

                    b.ToTable("discorduser", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Db.Models.FollowedStream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("channelid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("int")
                        .HasColumnName("guildconfigid");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("Username")
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_followedstream");

                    b.HasIndex("GuildConfigId")
                        .HasDatabaseName("ix_followedstream_guildconfigid");

                    b.ToTable("followedstream", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Db.Models.StreamOnlineMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("channelid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("messageid");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_streamonlinemessages");

                    b.ToTable("streamonlinemessages", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Db.Models.VanityRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("int")
                        .HasColumnName("guildconfigid");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("roleid");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_vanityroles");

                    b.HasIndex("GuildConfigId")
                        .HasDatabaseName("ix_vanityroles_guildconfigid");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_vanityroles_guildid");

                    b.HasIndex("Type")
                        .HasDatabaseName("ix_vanityroles_type");

                    b.ToTable("vanityroles", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.AthenaExpression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("AllowTarget")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("allowtarget");

                    b.Property<bool>("AutoDeleteTrigger")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("autodeletetrigger");

                    b.Property<bool>("ContainsAnywhere")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("containsanywhere");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<bool>("DmResponse")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("dmresponse");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<string>("Reactions")
                        .HasColumnType("longtext")
                        .HasColumnName("reactions");

                    b.Property<string>("Response")
                        .HasColumnType("longtext")
                        .HasColumnName("response");

                    b.Property<string>("Trigger")
                        .HasColumnType("longtext")
                        .HasColumnName("trigger");

                    b.HasKey("Id")
                        .HasName("pk_expressions");

                    b.ToTable("expressions", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.DelMsgOnCmdChannel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("channelid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("int")
                        .HasColumnName("guildconfigid");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("pk_delmsgoncmdchannel");

                    b.HasIndex("GuildConfigId")
                        .HasDatabaseName("ix_delmsgoncmdchannel_guildconfigid");

                    b.ToTable("delmsgoncmdchannel", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.FeedSub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("channelid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("int")
                        .HasColumnName("guildconfigid");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_feedsub");

                    b.HasAlternateKey("GuildConfigId", "Url")
                        .HasName("ak_feedsub_guildconfigid_url");

                    b.ToTable("feedsub", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.FilteredWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<int?>("GuildConfigId")
                        .HasColumnType("int")
                        .HasColumnName("guildconfigid");

                    b.Property<string>("Word")
                        .HasColumnType("longtext")
                        .HasColumnName("word");

                    b.HasKey("Id")
                        .HasName("pk_filteredword");

                    b.HasIndex("GuildConfigId")
                        .HasDatabaseName("ix_filteredword_guildconfigid");

                    b.ToTable("filteredword", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.GroupName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<int>("GuildConfigId")
                        .HasColumnType("int")
                        .HasColumnName("guildconfigid");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_groupname");

                    b.HasIndex("GuildConfigId", "Number")
                        .IsUnique()
                        .HasDatabaseName("ix_groupname_guildconfigid_number");

                    b.ToTable("groupname", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.GuildConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<bool>("DeleteMessageOnCommand")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deletemessageoncommand");

                    b.Property<bool>("DeleteStreamOnlineMessage")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deletestreamonlinemessage");

                    b.Property<bool>("DisableGlobalExpressions")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disableglobalexpressions");

                    b.Property<bool>("FilterWords")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("filterwords");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<string>("Locale")
                        .HasColumnType("longtext")
                        .HasColumnName("locale");

                    b.Property<bool>("NotifyStreamOffline")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("notifystreamoffline");

                    b.Property<string>("Prefix")
                        .HasColumnType("longtext")
                        .HasColumnName("prefix");

                    b.Property<string>("TimeZoneId")
                        .HasColumnType("longtext")
                        .HasColumnName("timezoneid");

                    b.Property<bool>("VerboseErrors")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("verboseerrors");

                    b.HasKey("Id")
                        .HasName("pk_guildconfigs");

                    b.HasIndex("GuildId")
                        .IsUnique()
                        .HasDatabaseName("ix_guildconfigs_guildid");

                    b.ToTable("guildconfigs", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("AuthorId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("authorid");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("authorname");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("guildid");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_quotes");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_quotes_guildid");

                    b.HasIndex("Keyword")
                        .HasDatabaseName("ix_quotes_keyword");

                    b.ToTable("quotes", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("channelid");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateadded");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isprivate");

                    b.Property<string>("Message")
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<ulong>("ServerId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("serverid");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned")
                        .HasColumnName("userid");

                    b.Property<DateTime>("When")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("when");

                    b.HasKey("Id")
                        .HasName("pk_reminders");

                    b.HasIndex("When")
                        .HasDatabaseName("ix_reminders_when");

                    b.ToTable("reminders", (string)null);
                });

            modelBuilder.Entity("AthenaBot.Db.Models.FollowedStream", b =>
                {
                    b.HasOne("AthenaBot.Services.Database.Models.GuildConfig", null)
                        .WithMany("FollowedStreams")
                        .HasForeignKey("GuildConfigId")
                        .HasConstraintName("fk_followedstream_guildconfigs_guildconfigid");
                });

            modelBuilder.Entity("AthenaBot.Db.Models.VanityRole", b =>
                {
                    b.HasOne("AthenaBot.Services.Database.Models.GuildConfig", null)
                        .WithMany("VanityRoles")
                        .HasForeignKey("GuildConfigId")
                        .HasConstraintName("fk_vanityroles_guildconfigs_guildconfigid");
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.DelMsgOnCmdChannel", b =>
                {
                    b.HasOne("AthenaBot.Services.Database.Models.GuildConfig", null)
                        .WithMany("DelMsgOnCmdChannels")
                        .HasForeignKey("GuildConfigId")
                        .HasConstraintName("fk_delmsgoncmdchannel_guildconfigs_guildconfigid");
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.FeedSub", b =>
                {
                    b.HasOne("AthenaBot.Services.Database.Models.GuildConfig", "GuildConfig")
                        .WithMany("FeedSubs")
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_feedsub_guildconfigs_guildconfigid");

                    b.Navigation("GuildConfig");
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.FilteredWord", b =>
                {
                    b.HasOne("AthenaBot.Services.Database.Models.GuildConfig", null)
                        .WithMany("FilteredWords")
                        .HasForeignKey("GuildConfigId")
                        .HasConstraintName("fk_filteredword_guildconfigs_guildconfigid");
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.GroupName", b =>
                {
                    b.HasOne("AthenaBot.Services.Database.Models.GuildConfig", "GuildConfig")
                        .WithMany()
                        .HasForeignKey("GuildConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_groupname_guildconfigs_guildconfigid");

                    b.Navigation("GuildConfig");
                });

            modelBuilder.Entity("AthenaBot.Services.Database.Models.GuildConfig", b =>
                {
                    b.Navigation("DelMsgOnCmdChannels");

                    b.Navigation("FeedSubs");

                    b.Navigation("FilteredWords");

                    b.Navigation("FollowedStreams");

                    b.Navigation("VanityRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
